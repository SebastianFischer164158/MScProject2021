#include <Arduino.h>
#include <utilities.h>
#include <Acorn128.h>

#define MAX_PLAINTEXT_LEN 73
#define MAX_AUTHDATA_LEN 39

byte buffer[128];

void setup() {
    Serial.begin(115200);

    // Initialize Acorn Cipher.
    Acorn128 cipher;

    // Initialize sizes
    const int authsize    = 16;
    const int datasize    = 16;
    const int keysize     = 16;
    const int ivsize      = 16;

    // Setup purpose
    uint8_t key[keysize]                    = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f};
    uint8_t plaintext[MAX_PLAINTEXT_LEN]    = {0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01};
    uint8_t authdata[MAX_AUTHDATA_LEN]      = {0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01};
    uint8_t iv[ivsize]                      = {0x00, 0x03, 0x06, 0x09, 0x0c, 0x0f, 0x12, 0x15, 0x18, 0x1b, 0x1e, 0x21, 0x24, 0x27, 0x2a, 0x2d};

    // For testing purpose
    uint8_t ciphertext[MAX_PLAINTEXT_LEN]  = {0x86, 0x80, 0x1f, 0xa8, 0x9e, 0x33, 0xd9, 0x92, 0x35, 0xdd, 0x4d, 0x1a, 0x72, 0xce, 0x00, 0x1a};
    uint8_t tag[16] = {0xd9, 0xc6, 0x6b, 0x4a, 0xdb, 0x3c, 0xde, 0x07, 0x3e, 0x63, 0x50, 0xcc, 0x7e, 0x23, 0x7e, 0x01};

    cipher.clear();
    cipher.setKey(key, keysize);
    cipher.setIV(iv, ivsize);

    memset(buffer, 0xBA, sizeof(buffer));
    cipher.addAuthData(authdata, authsize);
    cipher.encrypt(buffer, plaintext, datasize);


    print_uint8(buffer, 16);
}

void loop() {

}